{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\StudyNotion-An-Online-Education-Platform-master\\\\src\\\\components\\\\core\\\\Dashboard\\\\AddCourse\\\\CourseInformation\\\\ChipInput.jsx\";\n// Importing React hook for managing component state\nimport { useEffect, useState } from \"react\";\n// Importing React icon component\nimport { MdClose } from \"react-icons/md\";\nimport { useSelector } from \"react-redux\";\n\n// Defining a functional component ChipInput\nexport default function ChipInput({\n  // Props to be passed to the component\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  setValue,\n  getValues\n}) {\n  const {\n    editCourse,\n    course\n  } = useSelector(state => state.course);\n\n  // Setting up state for managing chips array\n  const [chips, setChips] = useState([]);\n  useEffect(() => {\n    if (editCourse) {\n      // console.log(course)\n      setChips(course === null || course === void 0 ? void 0 : course.tag);\n    }\n    register(name, {\n      required: true,\n      validate: value => value.length > 0\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setValue(name, chips);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chips]);\n\n  // Function to handle user input when chips are added\n  const handleKeyDown = event => {\n    // Check if user presses \"Enter\" or \",\"\n    if (event.key === \"Enter\" || event.key === \",\") {\n      // Prevent the default behavior of the event\n      event.preventDefault();\n      // Get the input value and remove any leading/trailing spaces\n      const chipValue = event.target.value.trim();\n      // Check if the input value exists and is not already in the chips array\n      if (chipValue && !chips.includes(chipValue)) {\n        // Add the chip to the array and clear the input\n        const newChips = [...chips, chipValue];\n        setChips(newChips);\n        event.target.value = \"\";\n      }\n    }\n  };\n\n  // Function to handle deletion of a chip\n  const handleDeleteChip = chipIndex => {\n    // Filter the chips array to remove the chip with the given index\n    const newChips = chips.filter((_, index) => index !== chipIndex);\n    setChips(newChips);\n  };\n\n  // Render the component\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-sm text-richblack-5\",\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, label, \" \", /*#__PURE__*/React.createElement(\"sup\", {\n    className: \"text-pink-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex w-full flex-wrap gap-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, chips.map((chip, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"m-1 flex items-center rounded-full bg-yellow-400 px-2 py-1 text-sm text-richblack-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, chip, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"ml-2 focus:outline-none\",\n    onClick: () => handleDeleteChip(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MdClose, {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    id: name,\n    name: name,\n    type: \"text\",\n    placeholder: placeholder,\n    onKeyDown: handleKeyDown,\n    className: \"form-style w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), errors[name] && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2 text-xs tracking-wide text-pink-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, label, \" is required\"));\n}","map":{"version":3,"names":["useEffect","useState","MdClose","useSelector","ChipInput","label","name","placeholder","register","errors","setValue","getValues","editCourse","course","state","chips","setChips","tag","required","validate","value","length","handleKeyDown","event","key","preventDefault","chipValue","target","trim","includes","newChips","handleDeleteChip","chipIndex","filter","_","index","React","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","chip","type","onClick","id","onKeyDown"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/StudyNotion-An-Online-Education-Platform-master/src/components/core/Dashboard/AddCourse/CourseInformation/ChipInput.jsx"],"sourcesContent":["// Importing React hook for managing component state\nimport { useEffect, useState } from \"react\"\n// Importing React icon component\nimport { MdClose } from \"react-icons/md\"\nimport { useSelector } from \"react-redux\"\n\n// Defining a functional component ChipInput\nexport default function ChipInput({\n  // Props to be passed to the component\n  label,\n  name,\n  placeholder,\n  register,\n  errors,\n  setValue,\n  getValues,\n}) {\n  const { editCourse, course } = useSelector((state) => state.course)\n\n  // Setting up state for managing chips array\n  const [chips, setChips] = useState([])\n\n  useEffect(() => {\n    if (editCourse) {\n      // console.log(course)\n      setChips(course?.tag)\n    }\n    register(name, { required: true, validate: (value) => value.length > 0 })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    setValue(name, chips)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chips])\n\n  // Function to handle user input when chips are added\n  const handleKeyDown = (event) => {\n    // Check if user presses \"Enter\" or \",\"\n    if (event.key === \"Enter\" || event.key === \",\") {\n      // Prevent the default behavior of the event\n      event.preventDefault()\n      // Get the input value and remove any leading/trailing spaces\n      const chipValue = event.target.value.trim()\n      // Check if the input value exists and is not already in the chips array\n      if (chipValue && !chips.includes(chipValue)) {\n        // Add the chip to the array and clear the input\n        const newChips = [...chips, chipValue]\n        setChips(newChips)\n        event.target.value = \"\"\n      }\n    }\n  }\n\n  // Function to handle deletion of a chip\n  const handleDeleteChip = (chipIndex) => {\n    // Filter the chips array to remove the chip with the given index\n    const newChips = chips.filter((_, index) => index !== chipIndex)\n    setChips(newChips)\n  }\n\n  // Render the component\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      {/* Render the label for the input */}\n      <label className=\"text-sm text-richblack-5\" htmlFor={name}>\n        {label} <sup className=\"text-pink-200\">*</sup>\n      </label>\n      {/* Render the chips and input */}\n      <div className=\"flex w-full flex-wrap gap-y-2\">\n        {/* Map over the chips array and render each chip */}\n        {chips.map((chip, index) => (\n          <div\n            key={index}\n            className=\"m-1 flex items-center rounded-full bg-yellow-400 px-2 py-1 text-sm text-richblack-5\"\n          >\n            {/* Render the chip value */}\n            {chip}\n            {/* Render the button to delete the chip */}\n            <button\n              type=\"button\"\n              className=\"ml-2 focus:outline-none\"\n              onClick={() => handleDeleteChip(index)}\n            >\n              <MdClose className=\"text-sm\" />\n            </button>\n          </div>\n        ))}\n        {/* Render the input for adding new chips */}\n        <input\n          id={name}\n          name={name}\n          type=\"text\"\n          placeholder={placeholder}\n          onKeyDown={handleKeyDown}\n          className=\"form-style w-full\"\n        />\n      </div>\n      {/* Render an error message if the input is required and not filled */}\n      {errors[name] && (\n        <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\n          {label} is required\n        </span>\n      )}\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}